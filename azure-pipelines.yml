# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: ado-discord-webhook@2
  inputs:
    webhookId: '1225855640786702497/'
    webhookKey: 'CIur9sprqOrTHBhRZAypEdFBI5R2vjSss4Fi1Mj2Bzhix3E6fO-SqXVO2PaIVWBAbj2y'
    content: 'Deployment Started'
  displayName: 'Discord Webhook Started'
- task: SSH@0
  inputs:
    sshEndpoint: 'Digital Ocean SSH Connection'
    runOptions: 'commands'
    commands: 'cd ~/scripts/ && build.sh'
    readyTimeout: '20000'
- task: SSH@0
  inputs:
    sshEndpoint: 'Digital Ocean SSH Connection'
    runOptions: 'commands'
    commands: cd ~/code/disney-plus-clone/ &&  git pull 2> git_error.log && echo "Git pull completed successfully";
    readyTimeout: '20000'
  displayName: 'Git pull'
- task: SSH@0
  inputs:
    sshEndpoint: 'Digital Ocean SSH Connection'
    runOptions: 'commands'
    commands: cd ~/code/disney-plus-clone/ &&  npm i 2> npm_install_errors.log && echo "Installed dependencies successfully";
    readyTimeout: '20000'
  displayName: 'Installing Dependencies'
- task: SSH@0
  inputs:
    sshEndpoint: 'Digital Ocean SSH Connection'
    runOptions: 'inline'
    inline: "cd ~/code/disney-plus-clone/ && nvm use 18.17.0 2> nvm_error.log && echo 'Build Started' && npm run build > npm_run_build.log  2> npm_run_build_errors.log; echo 'Build Ended' && echo 'Built files successfully';"
    readyTimeout: '20000'
  displayName: 'Building Files'

- task: SSH@0
  inputs:
    sshEndpoint: 'Digital Ocean SSH Connection'
    runOptions: 'commands'
    commands: 'pm2 restart MovieGenie'
    readyTimeout: '20000'
  displayName: 'Restart pm2'
- task: ado-discord-webhook@2
  inputs:
    webhookId: '1225855640786702497/'
    webhookKey: 'CIur9sprqOrTHBhRZAypEdFBI5R2vjSss4Fi1Mj2Bzhix3E6fO-SqXVO2PaIVWBAbj2y'
    content: 'Deployment Ended'
  displayName: 'Discord Webhook Ended'
